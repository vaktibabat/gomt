package main

import (
	"fmt"
	"github.com/vaktibabat/gomt"
	"os"
	"time"
)

func main() {
	my_mt := mtlib.NewMt(uint32(time.Now().UnixMicro()))
	win_cnt := 0

	fmt.Println("Welcome to the guessing game!")
	fmt.Println("To win, guess a random number 10 times")
	fmt.Println("To help you, I wrote the first 624 numbers generated by the PRNG to a file named leak.txt")

	f, err := os.Create("./leak.txt")

	if err != nil {
		panic(err)
	}

	// Close after we return from main
	defer f.Close()

	for i := 0; i < 624; i++ {
		to_write := fmt.Sprintf("%d\n", my_mt.GenNext())

		f.WriteString(to_write)
	}

	fmt.Printf("Let's start!\n")

	for i := 0; i < 10; i++ {
		my_num := my_mt.GenNext() % 1000000
		var user_num uint32

		fmt.Printf("Guess which number I thought of: ")
		fmt.Scanf("%d\n", &user_num)

		fmt.Println("Correct!")

		if my_num != user_num {
			fmt.Println("Incorrect. Bye!")
			os.Exit(0)
		}

		win_cnt += 1
	}

	fmt.Println("Congratulations!")
}
